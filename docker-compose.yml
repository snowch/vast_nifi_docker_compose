services:
  nifi:
    image: apache/nifi:2.0.0-M4
    ports:
      - "8443:8443"
    restart: unless-stopped
    volumes:
      - ./certs:/opt/certs
      - ./vastdb_nifi/vastdb_nifi-linux-x86_64-py39.nar:/opt/nifi/nifi-current/nar_extensions/vastdb_nifi-linux-x86_64-py39.nar
    environment:
      - AUTH=ldap
      - KEYSTORE_PATH=/opt/certs/nifi1.jks
      - KEYSTORE_TYPE=JKS
      - KEYSTORE_PASSWORD=${STORE_PASSWORD}
      - TRUSTSTORE_PATH=/opt/certs/trust.jks
      - TRUSTSTORE_PASSWORD=${STORE_PASSWORD}
      - TRUSTSTORE_TYPE=JKS
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=123456123456
      - INITIAL_ADMIN_IDENTITY=${CLIENT_DN}
      - LDAP_AUTHENTICATION_STRATEGY=SIMPLE
      - LDAP_MANAGER_DN=cn=admin,dc=example,dc=org
      - LDAP_MANAGER_PASSWORD=admin
      - LDAP_USER_SEARCH_BASE=dc=example,dc=org
      - LDAP_USER_SEARCH_FILTER=cn={0}
      - LDAP_IDENTITY_STRATEGY=USE_DN
      - LDAP_URL=ldap://openldap:389
    platform: linux/amd64
    depends_on:
      - certs_generator
      - openldap
      - download_vastdb_nar

  certs_generator:
    image: openjdk:24-jdk
    volumes:
      - ./certs:/data
    command:
      - sh
      - -c
      - |
        if [ -f /data/ca.key ]; then
          echo "CA key already exists. Exiting gracefully."
          exit 0
        fi
        openssl genrsa -out /data/ca.key 3072
        openssl req -new -x509 -days 365 -key /data/ca.key -sha256 -out /data/ca.cer -subj '/CN=nifi-ca/OU=nifi/'
        openssl genrsa -out /data/nifi1.key 3072
        openssl req -new -key /data/nifi1.key -out /data/nifi1.csr -subj "/CN=${EXT_HOST_NAME}/OU=nifi/O=Your Organization/L=Your Location/C=US" -addext "subjectAltName=IP:${EXT_HOST_IP},DNS:${EXT_HOST_NAME},DNS:localhost"
        openssl x509 -req -in /data/nifi1.csr -CA /data/ca.cer -CAkey /data/ca.key -CAcreateserial -out /data/nifi1.cer -days 365 -sha256
        keytool -importcert -trustcacerts -file /data/nifi1.cer -keystore /data/nifi1.jks -storepass "${STORE_PASSWORD}" -alias nifi1 -noprompt
        keytool -importcert -trustcacerts -file /data/ca.cer -keystore /data/trust.jks -storepass "${STORE_PASSWORD}" -alias ca -noprompt
        openssl genrsa -out /data/client.key 3072
        openssl req -new -key /data/client.key -out /data/client.csr -subj '/CN=nifi-client/OU=nifi/O=Your Organization/L=Your Location/C=US'
        openssl x509 -req -in /data/client.csr -CA /data/ca.cer -CAkey /data/ca.key -CAcreateserial -out /data/client.cer -days 365 -sha256
        openssl pkcs12 -export -out /data/client.p12 -inkey /data/client.key -in /data/client.cer -certfile /data/ca.cer -passout pass:"${STORE_PASSWORD}"
        chown -R $(id -u):$(id -g) /data
    environment:
      - EXT_HOST_NAME=vastdb-ingest
      - EXT_HOST_IP=10.71.212.111
      - STORE_PASSWORD=abcdef

  download_vastdb_nar:
    image: debian:bullseye-slim
    volumes:
      - ./vastdb_nifi:/data
    entrypoint: >
      bash -c '
      apt-get update && apt-get install -y curl jq &&
      echo "Fetching latest release..." &&
      LATEST_RELEASE=$$(curl -s https://api.github.com/repos/vast-data/vastdb_nifi/releases/latest | jq -r .tag_name | sed "s/^v//") &&
      echo "Latest release is: $$LATEST_RELEASE" &&
      if [ -n "$$LATEST_RELEASE" ]; then
        echo "Downloading NAR file..." &&
        curl -L -o /data/vastdb_nifi-$$LATEST_RELEASE-linux-x86_64-py39.nar https://github.com/vast-data/vastdb_nifi/releases/download/v$$LATEST_RELEASE/vastdb_nifi-$$LATEST_RELEASE-linux-x86_64-py39.nar &&
        ln -s vastdb_nifi-linux-x86_64-py39.nar vastdb_nifi-$$LATEST_RELEASE-linux-x86_64-py39.nar
        echo "Successfully downloaded NAR file to local folder ./vastdb_nifi"
      else
        echo "Failed to fetch latest release. Exiting." &&
        exit 1
      fi
      '

  openldap:
    image: osixia/openldap:1.5.0
    container_name: openldap
    environment:
      - LDAP_ORGANISATION="Example Organization"
      - LDAP_DOMAIN="example.org"
      - LDAP_ADMIN_PASSWORD="admin"
    ports:
      - "389:389"
      - "636:636"
    volumes:
      - ./ldap/config:/etc/ldap/slapd.d
      - ./ldap/data:/var/lib/ldap
    restart: unless-stopped

  ldap_admin:
    image: osixia/phpldapadmin:0.9.0
    container_name: ldap_admin
    environment:
      - PHPLDAPADMIN_LDAP_HOSTS=openldap
    ports:
      - "6443:443"
    depends_on:
      - openldap
    restart: unless-stopped
